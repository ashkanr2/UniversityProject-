@model IEnumerable<UniversityProject.Models.CourseListVM>

@using Microsoft.AspNetCore.Identity
@inject SignInManager<UniversityProject.Entities.User> SignInManager
@inject UserManager<UniversityProject.Entities.User> UserManager
@{
    ViewData["Title"] = "MyCourses";
    var isAuthenticated = User.Identity.IsAuthenticated;
    UniversityProject.Entities.User currentUser = null;
    if (isAuthenticated)
    {
        currentUser = await UserManager.GetUserAsync(User);
    }
}
@if (ViewBag.ErrorMessagequery != null)
{
    <script>
        alert('@Html.Raw(ViewBag.ErrorMessagequery)')
    </script>
}

<br />
<br />
<br />

<br />


<head>
    <meta charset="utf-8" />
    <title>Edit Course Time</title>
    <link rel="stylesheet" href="~/Calender/ClenderCss.css" />
</head>

<div class="container">
    <div class="page-nav no-margin row">
        <div class="container">
            <div class="row">
                <h2>Courses</h2>
                <ul>
                    <li><a href="#"><i class="fas fa-home"></i> Home</a></li>
                    <li><i class="fas fa-angle-double-right"></i> MyCourses</li>
                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                    {
                        <li style="color: green;"><i class="fas fa-angle-double-right"></i> @ViewBag.ErrorMessage</li>
                    }
                </ul>
            </div>
        </div>
    </div>

    <div class="schedule-table">
        <table class="table bg-white ">
            <thead>
                <tr class="text-warning">
                    <th>Name</th>
                    <th>Description</th>
                    <th>Teacher Name</th>
                    <th>Cost</th>
                    <th>Student Number</th>
                    <th>Days</th>
                    @if (isAuthenticated && currentUser.IsTeacher)
                    {
                        <th>Actions</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model)
                {
                    <tr>
                        <td>@course.Name</td>
                        <td>@course.Description</td>
                        <td>@course.TeacherName</td>
                        <td>@course.Cost</td>
                        <td>@course.StudentNumber</td>
                        <td>
                            @if (course.Days.Count()==7)
                            {
                                <span>&nbsp;Every Day</span>
                            }

                            @if (course.Days.Count()<7)
                            {
                                foreach (var day in course.Days)
                                {
                        
                                    <span>&nbsp;@day</span>
                                }
                            }
                        </td>
                        @if (isAuthenticated && currentUser.IsTeacher)
                        {
                            <td>
                                <a href="@Url.Action("Edit", new { id = course.Id })" class="btn btn-warning btn-sm">Edit</a>
                              @*   <a href="@Url.Action("Details", new { id = course.Id })" class="btn btn-info btn-sm">Details</a>
                                <a href="@Url.Action("Delete", new { id = course.Id })" class="btn btn-danger btn-sm">Delete</a> *@
                            </td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script src="~/js/loadImages.js"></script>
